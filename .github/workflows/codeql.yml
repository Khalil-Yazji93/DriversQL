name: "CodeQL Advanced"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '36 9 * * 0'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: windows-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: manual
          - language: csharp
            build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Install Windows SDK and WDK
    - name: Install Windows SDK and Driver Kit
      shell: pwsh
      run: |
        $vsInstallerPath = "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe"
        if (Test-Path $vsInstallerPath) {
          Start-Process -FilePath $vsInstallerPath -ArgumentList "modify", `
            "--add", "Microsoft.VisualStudio.Component.Windows10SDK.19041", `
            "--add", "Microsoft.VisualStudio.Component.WDK", `
            "--add", "Microsoft.VisualStudio.Component.WDK-VisualStudio", `
            "--add", "Microsoft.VisualStudio.Component.WDK-ARM", `
            "--add", "Microsoft.VisualStudio.Component.WDK-ARM64", `
            "--quiet", "--wait", "--norestart" -NoNewWindow -Wait
        } else {
          Write-Error "Visual Studio Installer not found at $vsInstallerPath"
          exit 1
        }

    # Verify Windows SDK installation
    - name: Verify Windows SDK Installation
      shell: pwsh
      run: |
        Get-ChildItem "C:\Program Files (x86)\Windows Kits\10\bin" -Recurse

    # Dynamically Add Windows SDK tools to PATH
    - name: Add Windows SDK tools to PATH
      shell: pwsh
      run: |
        $sdkRoot = "C:\Program Files (x86)\Windows Kits\10\bin"
        $latestVersion = Get-ChildItem $sdkRoot | Where-Object { $_.PSIsContainer } | Sort-Object Name -Descending | Select-Object -First 1
        if ($latestVersion) {
          $env:Path += ";$($sdkRoot)\$($latestVersion.Name)\x86;$($sdkRoot)\$($latestVersion.Name)\x64"
          echo "PATH=$env:Path" | Out-File -Append -FilePath $env:GITHUB_ENV
        } else {
          Write-Error "No Windows SDK version found in $sdkRoot"
          exit 1
        }

    # Rebuild INF Verification Tool Cache with improved logic
    - name: Rebuild INF Verification Tool Cache
      shell: pwsh
      run: |
        Write-Output "Searching for InfVerif.dll..."

        $sdkRoot = "C:\Program Files (x86)\Windows Kits\10\bin"
        $installedSDKs = Get-ChildItem -Path $sdkRoot -Directory | Sort-Object Name -Descending

        $infVerifPath = $null
        foreach ($sdkVersion in $installedSDKs) {
          $searchPath = "$sdkRoot\$($sdkVersion.Name)"
          $infVerifPath = Get-ChildItem -Path $searchPath -Recurse -Filter "InfVerif.dll" -ErrorAction SilentlyContinue | Select-Object -First 1
          if ($infVerifPath) {
            Write-Output "Found InfVerif.dll in $($infVerifPath.FullName)"
            regsvr32 /s $infVerifPath.FullName
            exit 0
          }
        }

        Write-Error "InfVerif.dll not found in any installed Windows Kits."
        exit 1


    - name: Verify Visual Studio Installation
      run: |
        & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -all -prerelease -products * -format json

    - name: Locate MSBuild
      id: locate-msbuild
      shell: pwsh
      run: |
        $msbuildPath = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -find "MSBuild\**\Bin\MSBuild.exe"
        if ($msbuildPath) {
          echo "MSBUILD_PATH=$msbuildPath" | Out-File -Append -FilePath $env:GITHUB_ENV
        } else {
          Write-Error "MSBuild not found."
          exit 1
        }

    - name: Verify MSBuild Path
      run: |
        echo "MSBuild Path: $env:MSBUILD_PATH"
        & $env:MSBUILD_PATH /version

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - name: Build Solution with MSBuild
      if: matrix.language == 'c-cpp'
      run: |
        & $env:MSBUILD_PATH Drivers.sln /t:PM40Driver /p:Configuration=Release /p:Platform=x64 /m

    - name: Create CodeQL Database
      if: matrix.language == 'c-cpp'
      run: |
        & "C:\hostedtoolcache\windows\CodeQL\2.20.3\x64\codeql\codeql.exe" database create codeql-database `
          --language=cpp `
          --source-root=. `
          --command="`"$env:MSBUILD_PATH`" Drivers.sln /t:PM40Driver /p:Configuration=Release /p:Platform=x64" `
          --verbose

    - name: Analyze with CodeQL
      uses: github/codeql-action/analyze@v3

    - name: Upload CodeQL Logs (for debugging)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: codeql-logs
        path: D:\a\DriversQL\DriversQL\codeql-database\log
