#pragma once
/*++
Copyright (c) Microsoft Corporation.  All rights reserved.

THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
PURPOSE.

Module Name:

Public.h

Abstract:

This module contains the common declarations shared by driver
and user applications.

Environment:

user and kernel

--*/

#ifdef DEFINE_GUID


DEFINE_GUID(GUID_SI10_INTERFACE,
	0x2fd18809, 0x8bb3, 0x452a, 0x97, 0x16, 0xe9, 0x55, 0x36, 0xe8, 0x52, 0x6e);



#endif


#define SI10IOCTLSuccess	512


//
// This IOCTL toggles the driver's DMA Single Transfer Requirement
// on and off each time it is called.
//

#define SI10_MAJOR_NUM               1
#define SI10_MINOR_NUM               0
#define SI10_SUBMINOR_NUM			 1
#define SI10_BUILD_NUM               "Feb 2 2024"

#define STRINGIZE2(s) #s
#define STRINGIZE(s) STRINGIZE2(s)

#define SI10_MAJOR_NUM_STR       STRINGIZE(SI10_MAJOR_NUM)
#define SI10_MINOR_NUM_STR       STRINGIZE(SI10_MINOR_NUM)
#define SI10_SUBMINOR_NUM_STR    STRINGIZE(SI10_SUBMINOR_NUM)
#define SI10_BUILD_NUM_STR       STRINGIZE(SI10_BUILD_NUM)

#define SI10_PRODUCTVERSION			SI10_MAJOR_NUM, SI10_MINOR_NUM, SI10_SUBMINOR_NUM, SI10_BUILD_NUM
#define SI10_PRODUCTVERSION_STR		SI10_MAJOR_NUM_STR "." SI10_MINOR_NUM_STR "." SI10_SUBMINOR_NUM_STR "." SI10_BUILD_NUM_STR

#define SI10_LEGALCOPYRIGHT_YEARS    "2024"
#define SI10_PRODUCTNAME_STR         "Ultrasonic Sciences Ltd SI10 driver"
#define SI10_INTERNALNAME_STR        "SI10.sys"
#define SI10_COMPANYNAME_STR         "Ultrasonic Sciences Ltd"
#define SI10_FILEDESCRIPTION_STR     "SI10 PCI Reference Driver"
#define SI10_LEGALCOPYRIGHT_STR      SI10_LEGALCOPYRIGHT_YEARS " " SI10_COMPANYNAME_STR

// DO_MEM_STRUCT
// Do Memory Structure - Information for performing a Memory Transfer
typedef struct SI10_DO_MEM_STRUCT
{
	unsigned int	BarNum;             // Base Addres Register (BAR) to access
	unsigned __int64 	Offset;             // Byte starting offset in application buffer
	unsigned __int64	CardOffset;         // Byte starting offset in BAR
	unsigned __int64	Length;             // Transaction length in bytes
} SI10_DO_MEM_STRUCT, *SI10_PDO_MEM_STRUCT;

typedef struct SI10_LOAD_FPGA_STRUCT
{
	unsigned int		Length;             // Sizeof FPGA Binary
	unsigned char*		pBuffer;			// FPGA Binary
} SI10_LOAD_FPGA_STRUCT, *SI10_PLOAD_FPGA_STRUCT;

typedef struct SI10_MAILBOX_STRING_STRUCT
{
	unsigned int	nLength;             // Transaction length in bytes
	unsigned int	nMask;
} MAILBOX_STRING_STRUCT, *PMAILBOX_STRING_STRUCT;

typedef struct SI10_DEVICE_DRIVER_VERSION
{
	int nMajorNumber;
	int nMinorNumber;
	int nSubMinorNumber;
	char BuildNumber[12];
} SI10_DEVICE_DRIVER_VERSION, *PSI10_DEVICE_DRIVER_VERSION;

typedef struct SI10_INTERRUPT_CALLBACK_STRUCT
{
	int		hEvent;
//	HANDLE *phEvent;
} INTERRUPT_CALLBACK_STRUCT, *PSI10_INTERRUPT_CALLBACK_STRUCT;


// Rd_Wr_n defines
#define WRITE_TO_CARD                       0x0             // S2C
#define READ_FROM_CARD                      0x1             // C2S

#define MAILBOX_TIMED_OUT					0x8000
#define MAILBOX_CS							0x01
#define	MAILBOX_EOS							0x02

/**********************************************************
* Note: Codes 0-2047 (0-7FFh) are reserved by Microsoft
*       Coded 2048-4095 (800h-FFFh) are reserved for OEMs
*********************************************************/

#define SI10_IOCTL_PCI_BAR_SPACE_READ            CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_OUT_DIRECT, FILE_ANY_ACCESS)
#define SI10_IOCTL_PCI_BAR_SPACE_WRITE           CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803, METHOD_IN_DIRECT,  FILE_ANY_ACCESS)
#define SI10_IOCTL_MAILBOX_STRING_WRITE          CTL_CODE(FILE_DEVICE_UNKNOWN, 0x804, METHOD_IN_DIRECT,  FILE_ANY_ACCESS)
#define SI10_IOCTL_DRIVER_VERSION		         CTL_CODE(FILE_DEVICE_UNKNOWN, 0x805, METHOD_OUT_DIRECT, FILE_ANY_ACCESS)
#define SI10_IOCTL_GET_ISR_COUNT		         CTL_CODE(FILE_DEVICE_UNKNOWN, 0x806, METHOD_OUT_DIRECT, FILE_ANY_ACCESS)
#define SI10_IOCTL_GET_IRQ_SOURCE		         CTL_CODE(FILE_DEVICE_UNKNOWN, 0x807, METHOD_OUT_DIRECT, FILE_ANY_ACCESS)


#define SI10_IOCTL_CODE_BASE      0x820
#define IOCTL_MSG( code )        CTL_CODE(                \
                                         FILE_DEVICE_UNKNOWN, \
                                         code,                \
                                         METHOD_BUFFERED,     \
                                         FILE_ANY_ACCESS      \
                                         )


typedef enum _SI10_DRIVER_MSGS
{
	_SI10_MSG_DRIVER_VERSION = SI10_IOCTL_CODE_BASE,
	_SI10_MSG_DRIVER_PROPERTIES,
	_SI10_MSG_CHIP_TYPE_GET,
	_SI10_MSG_CHIP_TYPE_SET,
	_SI10_MSG_GET_PORT_PROPERTIES,
	_SI10_MSG_PCI_DEVICE_RESET,
	_SI10_MSG_PCI_DEVICE_FIND,
	_SI10_MSG_PCI_BAR_PROPERTIES,
	_SI10_MSG_PCI_BAR_MAP,
	_SI10_MSG_PCI_BAR_UNMAP,
	_SI10_MSG_PCI_REGISTER_READ,
	_SI10_MSG_PCI_REGISTER_WRITE,
	_SI10_MSG_PCI_REG_READ_UNSUPPORTED,
	_SI10_MSG_PCI_REG_WRITE_UNSUPPORTED,
	_SI10_MSG_REGISTER_READ,
	_SI10_MSG_REGISTER_WRITE,
	_SI10_MSG_MAPPED_REGISTER_READ,
	_SI10_MSG_MAPPED_REGISTER_WRITE,
	_SI10_MSG_PHYSICAL_MEM_ALLOCATE,
	_SI10_MSG_PHYSICAL_MEM_FREE,
	_SI10_MSG_PHYSICAL_MEM_MAP,
	_SI10_MSG_PHYSICAL_MEM_UNMAP,
	_SI10_MSG_COMMON_BUFFER_PROPERTIES,
	_SI10_MSG_IO_PORT_READ,
	_SI10_MSG_IO_PORT_WRITE,
	_SI10_MSG_PCI_BAR_SPACE_READ,
	_SI10_MSG_PCI_BAR_SPACE_WRITE,
	_SI10_MSG_VPD_READ,
	_SI10_MSG_VPD_WRITE,
	_SI10_MSG_EEPROM_PRESENT,
	_SI10_MSG_EEPROM_PROBE,
	_SI10_MSG_EEPROM_SET_ADDRESS_WIDTH,
	_SI10_MSG_EEPROM_CRC_GET,
	_SI10_MSG_EEPROM_CRC_UPDATE,
	_SI10_MSG_EEPROM_READ_BY_OFFSET,
	_SI10_MSG_EEPROM_WRITE_BY_OFFSET,
	_SI10_MSG_EEPROM_READ_BY_OFFSET_16,
	_SI10_MSG_EEPROM_WRITE_BY_OFFSET_16,
	_SI10_MSG_MAILBOX_READ,
	_SI10_MSG_MAILBOX_WRITE,
	_SI10_MSG_INTR_ENABLE,
	_SI10_MSG_INTR_DISABLE,
	_SI10_MSG_INTR_STATUS_GET,
	_SI10_MSG_NOTIFICATION_REGISTER_FOR,
	_SI10_MSG_NOTIFICATION_CANCEL,
	_SI10_MSG_NOTIFICATION_WAIT,
	_SI10_MSG_NOTIFICATION_STATUS,
	_SI10_MSG_DMA_CONTROL,
	_SI10_MSG_DMA_STATUS,
	_SI10_MSG_DMA_CHANNEL_OPEN,
	_SI10_MSG_DMA_TRANSFER_BLOCK,
	_SI10_MSG_DMA_TRANSFER_USER_BUFFER,
	_SI10_MSG_DMA_CHANNEL_CLOSE,
	_SI10_MSG_PERFORMANCE_INIT_PROPERTIES,
	_SI10_MSG_PERFORMANCE_MONITOR_CTRL,
	_SI10_MSG_PERFORMANCE_RESET_COUNTERS,
	_SI10_MSG_PERFORMANCE_GET_COUNTERS,
	_SI10_MSG_LOAD_FPGA_BINARY,
	_SI10_MSG_ENABLE_INTERRUPT_CALLBACK,
} _SI10_DRIVER_MSGS;




#define PLX_IOCTL_DRIVER_VERSION                IOCTL_MSG( MSG_DRIVER_VERSION )
#define PLX_IOCTL_DRIVER_PROPERTIES             IOCTL_MSG( MSG_DRIVER_PROPERTIES )
#define PLX_IOCTL_CHIP_TYPE_GET                 IOCTL_MSG( MSG_CHIP_TYPE_GET )
#define PLX_IOCTL_CHIP_TYPE_SET                 IOCTL_MSG( MSG_CHIP_TYPE_SET )
#define PLX_IOCTL_GET_PORT_PROPERTIES           IOCTL_MSG( MSG_GET_PORT_PROPERTIES )

#define PLX_IOCTL_PCI_DEVICE_FIND               IOCTL_MSG( MSG_PCI_DEVICE_FIND )
#define PLX_IOCTL_PCI_DEVICE_RESET              IOCTL_MSG( MSG_PCI_DEVICE_RESET )
#define PLX_IOCTL_PCI_BAR_PROPERTIES            IOCTL_MSG( MSG_PCI_BAR_PROPERTIES )
#define PLX_IOCTL_PCI_BAR_MAP                   IOCTL_MSG( MSG_PCI_BAR_MAP )
#define PLX_IOCTL_PCI_BAR_UNMAP                 IOCTL_MSG( MSG_PCI_BAR_UNMAP )

#define PLX_IOCTL_PCI_REGISTER_READ             IOCTL_MSG( MSG_PCI_REGISTER_READ )
#define PLX_IOCTL_PCI_REGISTER_WRITE            IOCTL_MSG( MSG_PCI_REGISTER_WRITE )
#define PLX_IOCTL_PCI_REG_READ_UNSUPPORTED      IOCTL_MSG( MSG_PCI_REG_READ_UNSUPPORTED )
#define PLX_IOCTL_PCI_REG_WRITE_UNSUPPORTED     IOCTL_MSG( MSG_PCI_REG_WRITE_UNSUPPORTED )

#define PLX_IOCTL_REGISTER_READ                 IOCTL_MSG( MSG_REGISTER_READ )
#define PLX_IOCTL_REGISTER_WRITE                IOCTL_MSG( MSG_REGISTER_WRITE )
#define PLX_IOCTL_MAPPED_REGISTER_READ          IOCTL_MSG( MSG_MAPPED_REGISTER_READ )
#define PLX_IOCTL_MAPPED_REGISTER_WRITE         IOCTL_MSG( MSG_MAPPED_REGISTER_WRITE )

#define PLX_IOCTL_PHYSICAL_MEM_ALLOCATE         IOCTL_MSG( MSG_PHYSICAL_MEM_ALLOCATE )
#define PLX_IOCTL_PHYSICAL_MEM_FREE             IOCTL_MSG( MSG_PHYSICAL_MEM_FREE )
#define PLX_IOCTL_PHYSICAL_MEM_MAP              IOCTL_MSG( MSG_PHYSICAL_MEM_MAP )
#define PLX_IOCTL_PHYSICAL_MEM_UNMAP            IOCTL_MSG( MSG_PHYSICAL_MEM_UNMAP )
#define PLX_IOCTL_COMMON_BUFFER_PROPERTIES      IOCTL_MSG( MSG_COMMON_BUFFER_PROPERTIES )

#define PLX_IOCTL_IO_PORT_READ                  IOCTL_MSG( MSG_IO_PORT_READ )
#define PLX_IOCTL_IO_PORT_WRITE                 IOCTL_MSG( MSG_IO_PORT_WRITE )

#define PLX_IOCTL_VPD_READ                      IOCTL_MSG( MSG_VPD_READ )
#define PLX_IOCTL_VPD_WRITE                     IOCTL_MSG( MSG_VPD_WRITE )

#define PLX_IOCTL_EEPROM_PRESENT                IOCTL_MSG( MSG_EEPROM_PRESENT )
#define PLX_IOCTL_EEPROM_PROBE                  IOCTL_MSG( MSG_EEPROM_PROBE )
#define PLX_IOCTL_EEPROM_SET_ADDRESS_WIDTH      IOCTL_MSG( MSG_EEPROM_SET_ADDRESS_WIDTH )
#define PLX_IOCTL_EEPROM_CRC_GET                IOCTL_MSG( MSG_EEPROM_CRC_GET )
#define PLX_IOCTL_EEPROM_CRC_UPDATE             IOCTL_MSG( MSG_EEPROM_CRC_UPDATE )
#define PLX_IOCTL_EEPROM_READ_BY_OFFSET         IOCTL_MSG( MSG_EEPROM_READ_BY_OFFSET )
#define PLX_IOCTL_EEPROM_WRITE_BY_OFFSET        IOCTL_MSG( MSG_EEPROM_WRITE_BY_OFFSET )
#define PLX_IOCTL_EEPROM_READ_BY_OFFSET_16      IOCTL_MSG( MSG_EEPROM_READ_BY_OFFSET_16 )
#define PLX_IOCTL_EEPROM_WRITE_BY_OFFSET_16     IOCTL_MSG( MSG_EEPROM_WRITE_BY_OFFSET_16 )

#define PLX_IOCTL_MAILBOX_READ                  IOCTL_MSG( MSG_MAILBOX_READ )
#define PLX_IOCTL_MAILBOX_WRITE                 IOCTL_MSG( MSG_MAILBOX_WRITE )

#define PLX_IOCTL_INTR_ENABLE                   IOCTL_MSG( MSG_INTR_ENABLE )
#define PLX_IOCTL_INTR_DISABLE                  IOCTL_MSG( MSG_INTR_DISABLE )
#define PLX_IOCTL_INTR_STATUS_GET               IOCTL_MSG( MSG_INTR_STATUS_GET )
#define PLX_IOCTL_NOTIFICATION_REGISTER_FOR     IOCTL_MSG( MSG_NOTIFICATION_REGISTER_FOR )
#define PLX_IOCTL_NOTIFICATION_CANCEL           IOCTL_MSG( MSG_NOTIFICATION_CANCEL )
#define PLX_IOCTL_NOTIFICATION_WAIT             IOCTL_MSG( MSG_NOTIFICATION_WAIT )
#define PLX_IOCTL_NOTIFICATION_STATUS           IOCTL_MSG( MSG_NOTIFICATION_STATUS )

#define PLX_IOCTL_DMA_CONTROL                   IOCTL_MSG( MSG_DMA_CONTROL )
#define PLX_IOCTL_DMA_STATUS                    IOCTL_MSG( MSG_DMA_STATUS )
#define PLX_IOCTL_DMA_CHANNEL_OPEN              IOCTL_MSG( MSG_DMA_CHANNEL_OPEN )
#define PLX_IOCTL_DMA_TRANSFER_BLOCK            IOCTL_MSG( MSG_DMA_TRANSFER_BLOCK )
#define PLX_IOCTL_DMA_TRANSFER_USER_BUFFER      IOCTL_MSG( MSG_DMA_TRANSFER_USER_BUFFER )
#define PLX_IOCTL_DMA_CHANNEL_CLOSE             IOCTL_MSG( MSG_DMA_CHANNEL_CLOSE )

#define PLX_IOCTL_PERFORMANCE_INIT_PROPERTIES   IOCTL_MSG( MSG_PERFORMANCE_INIT_PROPERTIES )
#define PLX_IOCTL_PERFORMANCE_MONITOR_CTRL      IOCTL_MSG( MSG_PERFORMANCE_MONITOR_CTRL )
#define PLX_IOCTL_PERFORMANCE_RESET_COUNTERS    IOCTL_MSG( MSG_PERFORMANCE_RESET_COUNTERS )
#define PLX_IOCTL_PERFORMANCE_GET_COUNTERS      IOCTL_MSG( MSG_PERFORMANCE_GET_COUNTERS )


#define IOCTL_SI10_DOWNLOAD_FPGA_CODE			IOCTL_MSG( _SI10_MSG_LOAD_FPGA_BINARY )
#define SI10_IOCTL_ENABLE_INTERRUPT_CALLBACK	IOCTL_MSG( _SI10_MSG_ENABLE_INTERRUPT_CALLBACK )

#define	MAILBOX_PC_TO_CARD_FULL	0x02
#define	MAILBOX_CARD_TO_PC_FULL	0x01

#define	SI10_CLK_PORT			0x0204 //Cause trigger
#define	SI10_DIR_PORT			0x0208 //This is the stepper motor direction register for all channels
#define	SI10_CLK_ENABLE			0x01A8 //This is the clock enable register for all clocks

#define	SI10_COUNT_0			0x0180
#define	SI10_COUNT_1			0x0184
#define	SI10_COUNT_2			0x0188
#define	SI10_COUNT_3			0x018C
#define	SI10_COUNT_4			0x0190
#define	SI10_COUNT_5			0x0194
#define	SI10_COUNT_6			0x0198
#define	SI10_COUNT_7			0x019C
#define	SI10_COUNT_8			0x01A0
#define	SI10_COUNT_9			0x01A4

#define SI10_ENCODER_0			0x0000
#define SI10_ENCODER_1			0x0004
#define SI10_ENCODER_2			0x0008
#define SI10_ENCODER_3			0x000A
#define SI10_ENCODER_4			0x000C
#define SI10_ENCODER_5			0x0010
#define SI10_ENCODER_6			0x0014
#define SI10_ENCODER_7			0x0018
#define SI10_ENCODER_8			0x001A
#define SI10_ENCODER_9			0x001C

#define SI10_COUNTER_LATCH_0	0x0040
#define SI10_COUNTER_LATCH_1	0x0044
#define SI10_COUNTER_LATCH_2	0x0048
#define SI10_COUNTER_LATCH_3	0x004A
#define SI10_COUNTER_LATCH_4	0x004C
#define SI10_COUNTER_LATCH_5	0x0050
#define SI10_COUNTER_LATCH_6	0x0054
#define SI10_COUNTER_LATCH_7	0x0058
#define SI10_COUNTER_LATCH_8	0x005A
#define SI10_COUNTER_LATCH_9	0x005C

#define	SI10_GENERAL_INPUT		0x0300
#define	SI10_GENERAL_OUTPUT		0x0300

#define	SI10_JOYSTICK			0x0380
#define	SI10_JOYSTICK_SWITCHES	0x0384

#define	SI10_LIMIT_SWITCHES		0x0080

#define SI10_MAILBOX_PORT		0x03C0
#define SI10_MAILBOX_STATUS		0x03C4
#define SI10_PRF_PERIOD			0x03CC
#define SI10_FPGA_BINARY_DATE	0x03F8
